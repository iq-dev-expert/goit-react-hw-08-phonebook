{"version":3,"file":"static/js/774.89460593.chunk.js","mappings":"8OAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAoB,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,EAEzBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACX,EAAgBQ,IACjB,SAACN,EAAUO,GACT,IAAMG,EAAoBH,EAAOI,cAEjC,OAAOX,EAASO,QAAO,SAAAK,GAAO,OAC5BA,EAAQC,KAAKF,cAAcG,SAASJ,EADR,GAG/B,ICPUK,EAAc,WACzB,IAAMf,GAAWgB,EAAAA,EAAAA,IAAYlB,GACvBK,GAAYa,EAAAA,EAAAA,IAAYd,GACxBG,GAAQW,EAAAA,EAAAA,IAAYZ,GACpBG,GAASS,EAAAA,EAAAA,IAAYV,GACrBW,GAAmBD,EAAAA,EAAAA,IAAYR,GAE/BU,GAAWC,EAAAA,EAAAA,MAcjB,MAAO,CACLnB,SAAAA,EACAG,UAAAA,EACAE,MAAAA,EACAE,OAAAA,EACAU,iBAAAA,EACAG,eAnBoBC,EAAAA,EAAAA,cACpB,kBAAMH,EAASI,EAAAA,KAAf,GACA,CAACJ,IAkBDK,WAfiB,SAAC,GAAD,IAAGV,EAAH,EAAGA,KAAMW,EAAT,EAASA,OAAT,OACjBN,EAASI,EAAAA,GAAmB,CAAET,KAAAA,EAAMW,OAAAA,IADnB,EAgBjBC,cAboB,SAAAC,GAAS,OAAIR,EAASI,EAAAA,GAAsBI,GAAnC,EAc7BC,YAZkB,SAACD,EAAWE,GAAZ,OAClBV,EAASI,EAAAA,GAAoB,CAAEI,UAAAA,EAAWE,cAAAA,IADxB,EAcrB,E,mBCzCYC,EAAOC,EAAAA,EAAAA,KAAH,sLCAJC,EAASD,EAAAA,EAAAA,OAAH,0QAGG,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aAAvB,IACT,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,iBAAvB,IAEf,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,UAAUC,yBAA1B,IACM,SAAAN,GAAK,OAAIA,EAAMC,MAAMI,UAAUC,yBAA1B,IAIA,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,OAAOK,MAAvB,IACT,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOK,MAAvB,I,UCVZC,EAAc,WACzB,MAAiCzB,IAAzBf,EAAR,EAAQA,SAAUuB,EAAlB,EAAkBA,WAmBZkB,EAAuB,SAAA5B,GAC3B,OAAOb,EAAS0C,MACd,SAAA9B,GAAO,OAAIA,EAAQC,KAAKF,gBAAkBE,EAAKF,aAAxC,GAEV,EAED,OACE,UAACkB,EAAD,CAAMc,SAxBS,SAAAC,GACfA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,OACTlC,EAAOiC,EAAKE,SAASnC,KAAKoC,MAC1BzB,EAASsB,EAAKE,SAASE,MAAMD,MAEnC,GAAIR,EAAqB5B,GAGvB,OAFAsC,MAAM,GAAD,OAAItC,EAAJ,kCACLiC,EAAKM,QAIP7B,EAAW,CAAEV,KAAAA,EAAMW,OAAAA,IACnBsB,EAAKM,OACN,EASC,WACE,qCAEE,kBACEC,KAAK,OACLxC,KAAK,OACLyC,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,kBACEH,KAAK,MACLxC,KAAK,QACLyC,QAAQ,qGACRC,MAAM,+FACNC,UAAQ,QAGZ,SAACzB,EAAD,CAAQsB,KAAK,SAAb,2BAGL,ECrDYI,EAAO3B,EAAAA,EAAAA,GAAH,gL,8BCAJ4B,EAAU5B,EAAAA,EAAAA,IAAH,uOAaP6B,EAAa7B,EAAAA,EAAAA,IAAH,6FCZV8B,EAAW,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,GAAIjD,EAAmB,EAAnBA,KAAMW,EAAa,EAAbA,OACxCG,EAAgBZ,IAAhBY,YAYR,OACE,kBACEgB,SAba,SAAAC,GACfA,EAAEC,iBACF,IAAMjB,EAAgB,CACpBf,KAAM+B,EAAEG,OAAOlC,KAAKoC,MACpBzB,OAAQoB,EAAEG,OAAOG,MAAMD,OAGzBtB,EAAYmC,EAAIlC,GAChBiC,GACD,EAKGE,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAiB,SAFrD,WAIE,qCAEE,kBACEb,KAAK,OACLxC,KAAK,OACLsD,aAActD,EACdyC,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,QAGZ,mBACA,uCAEE,kBACEH,KAAK,MACLxC,KAAK,QACLsD,aAAc3C,EACd8B,QAAQ,qGACRC,MAAM,+FACNC,UAAQ,QAGZ,mBACA,SAACzB,EAAD,CAAQsB,KAAK,SAAb,mBACA,SAACtB,EAAD,CAAQsB,KAAK,SAASe,QAASP,EAA/B,qBAKL,E,kBC/CYQ,EAAQ,SAAC,GAA+B,IAA7BR,EAA4B,EAA5BA,YAAgB7B,GAAY,aAClDsC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,SAAA3B,GACF,WAAXA,EAAE4B,MACJX,GAEH,EAGD,OADAY,SAASC,iBAAiB,UAAWH,GAC9B,WACLE,SAASE,oBAAoB,UAAWJ,EACzC,CACF,GAAE,CAACV,IAQJ,OACE,SAACH,EAAD,CAASU,QAPY,SAAAxB,GACjBA,EAAEG,SAAWH,EAAEgC,eACjBf,GAEH,EAGC,UACE,SAACF,EAAD,WACE,SAACC,GAAD,QAAUC,YAAaA,GAAiB7B,OAI/C,EC1BY6C,EAAc,SAAC,GAAyC,IAAvCf,EAAsC,EAAtCA,GAAIjD,EAAkC,EAAlCA,KAAMW,EAA4B,EAA5BA,OAAQsD,EAAoB,EAApBA,cAC9C,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQxD,EAAkBV,IAAlBU,cAEFyD,EAAY,WAChBD,GAAgBD,EACjB,EAED,OACE,iCACE,gCAAQF,EAAR,SACA,yBACGjE,EADH,KACWW,MAEX,SAACO,EAAD,CACEsB,KAAK,SACLe,QAAS,WACP3C,EAAcqC,EACf,EAJH,qBAQA,SAAC/B,EAAD,CAAQsB,KAAK,SAASe,QAASc,EAA/B,kBAGCF,IACC,SAACX,EAAD,CAAOR,YAAaqB,EAAWpB,GAAIA,EAAIjD,KAAMA,EAAMW,OAAQA,MAIlE,EC/BY2D,EAAc,WACzB,MAAoCpE,IAA5BE,EAAR,EAAQA,iBAAkBZ,EAA1B,EAA0BA,MAE1B,OACE,8BACGA,GACC,uBAAIA,IAEJY,EAAiBmE,OAAS,IACxB,SAAC3B,EAAD,UACGxC,EAAiBoE,KAAI,WAAuBC,GAAvB,IAAGxB,EAAH,EAAGA,GAAIjD,EAAP,EAAOA,KAAMW,EAAb,EAAaA,OAAb,OACpB,yBACE,SAACqD,EAAD,CACEf,GAAIA,EACJjD,KAAMA,EACNW,OAAQA,EACRsD,cAAeQ,EAAM,KALhBxB,EADW,OAejC,E,UC3BYyB,EAAQzD,EAAAA,EAAAA,MAAH,4ECGL0D,EAAS,WACpB,IAAMtE,GAAWC,EAAAA,EAAAA,MACTZ,EAAWQ,IAAXR,OAOR,OACE,UAACgF,EAAD,oCAEE,kBAAOlC,KAAK,OAAOJ,MAAO1C,EAAQkF,SARrB,SAAA7C,GACf,IAAQK,EAAUL,EAAEG,OAAZE,MACR/B,GAASwE,EAAAA,EAAAA,IAAezC,GACzB,MAQF,E,UChBY0C,EAAS,WACpB,IAAQxF,EAAcY,IAAdZ,UAMR,OAJAmE,EAAAA,EAAAA,YAAU,WACRnE,EAAYyF,EAAAA,QAAAA,OAAiBA,EAAAA,QAAAA,QAC9B,IAEM,IACR,E,UCVYC,EAAY/D,EAAAA,EAAAA,IAAH,kGCFTG,EAAQ,CACnBC,OAAQ,CACNK,OAAQ,UACRJ,cAAe,UACfC,kBAAmB,WAGrBC,UAAW,CACTC,0BAA2B,iBCwB/B,EAtBwB,WACtB,IAAQlB,EAAkBL,IAAlBK,cAMR,OAJAkD,EAAAA,EAAAA,YAAU,WACRlD,GACD,GAAE,CAACA,KAGF,UAAC,IAAD,CAAea,MAAOA,EAAtB,WACE,SAAC0D,EAAD,KACA,UAACE,EAAD,YACE,uCACA,SAACrD,EAAD,KAEA,sCACA,SAACgD,EAAD,KACA,SAACL,EAAD,SAIP,C","sources":["redux/reduxContactsList/selectors.js","hooks/useContacts.js","components/ContactForm/ContactForm.styled.jsx","utils-style/Template.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Modal/Modal.styled.jsx","components/EditForm/EditForm.jsx","components/Modal/Modal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/App/App.styled.jsx","utils-style/Theme.jsx","pages/ContactListPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    const filterToLowerCase = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterToLowerCase)\n    );\n  }\n);\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from 'redux/reduxContactsList/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectFilterValue,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/reduxContactsList/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilterValue);\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  const dispatch = useDispatch();\n  const fetchContacts = useCallback(\n    () => dispatch(actions.fetchContacts()),\n    [dispatch]\n  );\n\n  const addContact = ({ name, number }) =>\n    dispatch(actions.addContact({ name, number }));\n\n  const deleteContact = contactId => dispatch(actions.deleteContact(contactId));\n\n  const editContact = (contactId, editedContact) =>\n    dispatch(actions.editContact({ contactId, editedContact }));\n\n  return {\n    contacts,\n    isLoading,\n    error,\n    filter,\n    filteredContacts,\n    fetchContacts,\n    addContact,\n    deleteContact,\n    editContact,\n  };\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: table-caption;\n  padding: 10px;\n  margin: 0 0 20px 0;\n\n  border: 1px solid;\n\n  label {\n    display: block;\n\n    margin: 0 0 20px 0;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-radius: 4px;\n  background-color: ${props => props.theme.colors.buttonBgColor};\n  border-color: ${props => props.theme.colors.buttonBorderColor};\n  transition: background-color\n      ${props => props.theme.animation.durationAndTimingFunction},\n    border-color ${props => props.theme.animation.durationAndTimingFunction};\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.accent};\n    border-color: ${props => props.theme.colors.accent};\n  }\n`;\n","import { Form } from './ContactForm.styled';\nimport { Button } from 'utils-style/Template.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const ContactForm = () => {\n  const { contacts, addContact } = useContacts();\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.phone.value;\n\n    if (isContactInPhonebook(name)) {\n      alert(`${name} is already in contacts.`);\n      form.reset();\n      return;\n    }\n\n    addContact({ name, number });\n    form.reset();\n  };\n\n  const isContactInPhonebook = name => {\n    return contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n\n  li {\n    display: flex;\n    align-items: center;\n    margin: 0 0 10px 0;\n\n    p {\n      margin: 0 30px 0 0;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalStyle = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { useContacts } from 'hooks/useContacts';\nimport { Button } from 'utils-style/Template.styled';\n\nexport const EditForm = ({ toggleModal, id, name, number }) => {\n  const { editContact } = useContacts();\n  const onSubmit = e => {\n    e.preventDefault();\n    const editedContact = {\n      name: e.target.name.value,\n      number: e.target.phone.value,\n    };\n\n    editContact(id, editedContact);\n    toggleModal();\n  };\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      style={{ width: 400, height: 400, backgroundColor: 'white' }}\n    >\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          defaultValue={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <br />\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          defaultValue={number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <br />\n      <Button type=\"submit\">Save</Button>\n      <Button type=\"button\" onClick={toggleModal}>\n        Close\n      </Button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { Overlay, ModalStyle } from './Modal.styled';\nimport { EditForm } from 'components/EditForm/EditForm';\n\nexport const Modal = ({ toggleModal, ...props }) => {\n  useEffect(() => {\n    const onEscClick = e => {\n      if (e.code === 'Escape') {\n        toggleModal();\n      }\n    };\n\n    document.addEventListener('keydown', onEscClick);\n    return () => {\n      document.removeEventListener('keydown', onEscClick);\n    };\n  }, [toggleModal]);\n\n  const onOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={onOverlayClick}>\n      <ModalStyle>\n        <EditForm toggleModal={toggleModal} {...props} />\n      </ModalStyle>\n    </Overlay>\n  );\n};\n","import { Modal } from 'components/Modal/Modal';\nimport { useContacts } from 'hooks/useContacts';\nimport { useState } from 'react';\nimport { Button } from 'utils-style/Template.styled';\n\nexport const ContactItem = ({ id, name, number, contactNumber }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { deleteContact } = useContacts();\n\n  const useToggle = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <>\n      <span>#{contactNumber}==</span>\n      <p>\n        {name}: {number}\n      </p>\n      <Button\n        type=\"button\"\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        Delete\n      </Button>\n      <Button type=\"button\" onClick={useToggle}>\n        Edit\n      </Button>\n      {isModalOpen && (\n        <Modal toggleModal={useToggle} id={id} name={name} number={number} />\n      )}\n    </>\n  );\n};\n","import { List } from './ContactList.styled';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nexport const ContactList = () => {\n  const { filteredContacts, error } = useContacts();\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        filteredContacts.length > 0 && (\n          <List>\n            {filteredContacts.map(({ id, name, number }, idx) => (\n              <li key={id}>\n                <ContactItem\n                  id={id}\n                  name={name}\n                  number={number}\n                  contactNumber={idx + 1}\n                />\n              </li>\n            ))}\n          </List>\n        )\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: table-caption;\n\n  margin: 0 0 20px 0;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/reduxContactsList/filterSlice';\nimport { Label } from './Filter.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useContacts();\n\n  const onChange = e => {\n    const { value } = e.target;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <input type=\"text\" value={filter} onChange={onChange} />\n    </Label>\n  );\n};\n","import { useEffect } from 'react';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const Loader = () => {\n  const { isLoading } = useContacts();\n\n  useEffect(() => {\n    isLoading ? Loading.dots() : Loading.remove();\n  });\n\n  return null;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px 0 0 60px;\n\n  h1,\n  h2 {\n    margin: 0 0 10px 0;\n  }\n`;\n","export const theme = {\n  colors: {\n    accent: '#7edffc',\n    buttonBgColor: '#e6eaeb',\n    buttonBorderColor: '#c5c9c9',\n  },\n\n  animation: {\n    durationAndTimingFunction: '250ms linear',\n  },\n};\n","import { useEffect } from 'react';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ThemeProvider } from '@emotion/react';\nimport { Container } from 'components/App/App.styled';\nimport { theme } from 'utils-style/Theme';\n\nconst ContactListPage = () => {\n  const { fetchContacts } = useContacts();\n\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Loader />\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default ContactListPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectVisibleContacts","createSelector","filterToLowerCase","toLowerCase","contact","name","includes","useContacts","useSelector","filteredContacts","dispatch","useDispatch","fetchContacts","useCallback","actions","addContact","number","deleteContact","contactId","editContact","editedContact","Form","styled","Button","props","theme","colors","buttonBgColor","buttonBorderColor","animation","durationAndTimingFunction","accent","ContactForm","isContactInPhonebook","some","onSubmit","e","preventDefault","form","target","elements","value","phone","alert","reset","type","pattern","title","required","List","Overlay","ModalStyle","EditForm","toggleModal","id","style","width","height","backgroundColor","defaultValue","onClick","Modal","useEffect","onEscClick","code","document","addEventListener","removeEventListener","currentTarget","ContactItem","contactNumber","useState","isModalOpen","setIsModalOpen","useToggle","ContactList","length","map","idx","Label","Filter","onChange","filterContacts","Loader","Loading","Container"],"sourceRoot":""}