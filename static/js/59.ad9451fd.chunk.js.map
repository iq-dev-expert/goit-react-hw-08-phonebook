{"version":3,"file":"static/js/59.ad9451fd.chunk.js","mappings":"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","sources":["redux/reduxContactsList/selectors.js","hooks/useContacts.js","components/ContactForm/ContactForm.jsx","components/EditForm/EditForm.jsx","components/Modal/Modal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactListPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    const filterToLowerCase = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterToLowerCase)\n    );\n  }\n);\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilterValue,\n  selectVisibleContacts,\n} from 'redux/reduxContactsList/selectors';\nimport * as actions from 'redux/reduxContactsList/operations';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilterValue);\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  const dispatch = useDispatch();\n  const fetchContacts = useCallback(\n    () => dispatch(actions.fetchContacts()),\n    [dispatch]\n  );\n\n  const addContact = ({ name, number }) =>\n    dispatch(actions.addContact({ name, number }));\n\n  const deleteContact = contactId => dispatch(actions.deleteContact(contactId));\n\n  const editContact = (contactId, editedContact) =>\n    dispatch(actions.editContact({ contactId, editedContact }));\n\n  return {\n    contacts,\n    filter,\n    filteredContacts,\n    fetchContacts,\n    addContact,\n    deleteContact,\n    editContact,\n  };\n};\n","import { useContacts } from 'hooks/useContacts';\nimport { Notify } from 'notiflix';\n\nconst notifyInfoOptions = {\n  position: 'left-top',\n  distance: '50px',\n  fontSize: '18px',\n  width: '300px',\n  cssAnimationStyle: 'zoom',\n  cssAnimationDuration: 1000,\n};\n\nexport const ContactForm = () => {\n  const { contacts, addContact } = useContacts();\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.phone.value;\n\n    if (isContactInPhonebook(name)) {\n      Notify.info(`${name} is already in contacts.`, notifyInfoOptions);\n      form.reset();\n      return;\n    }\n\n    addContact({ name, number });\n    form.reset();\n  };\n\n  const isContactInPhonebook = name => {\n    return contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"form-primary\">\n      <label className=\"label-space-between\">\n        Name*:\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className=\"input-primary\"\n        />\n      </label>\n      <label className=\"label-space-between\">\n        Number*:\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Phone\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className=\"input-primary\"\n        />\n      </label>\n      <button type=\"submit\" className=\"btn-primary\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { useContacts } from 'hooks/useContacts';\nimport PropTypes from 'prop-types';\n\nexport const EditForm = ({ closeModal, id, name, number }) => {\n  const { editContact } = useContacts();\n  const onSubmit = e => {\n    e.preventDefault();\n    const editedContact = {\n      name: e.target.name.value,\n      number: e.target.phone.value,\n    };\n\n    editContact(id, editedContact);\n    closeModal();\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"flex flex-col rounded bg-white p-5\">\n      <label className=\"label-space-between\">\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          defaultValue={name}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className=\"input-primary\"\n        />\n      </label>\n      <label className=\"label-space-between\">\n        Number:\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          defaultValue={number}\n          placeholder=\"Phone\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className=\"input-primary\"\n        />\n      </label>\n      <div className=\"ml-auto w-fit\">\n        <button type=\"submit\" className=\"btn-secondary mr-5\">\n          Save\n        </button>\n        <button type=\"button\" onClick={closeModal} className=\"btn-secondary\">\n          Close\n        </button>\n      </div>\n    </form>\n  );\n};\n\nEditForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport PropTypes from 'prop-types';\n\nexport const Modal = ({ closeModal, ...props }) => {\n  useEffect(() => {\n    const onEscClick = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    document.addEventListener('keydown', onEscClick);\n    return () => {\n      document.removeEventListener('keydown', onEscClick);\n    };\n  }, [closeModal]);\n\n  const onOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return (\n    <div\n      onClick={onOverlayClick}\n      className=\"fixed left-0 top-0 z-50 flex h-screen w-screen items-center justify-center bg-backdrop-color\"\n    >\n      <div className=\"max-h-full max-w-full\">\n        <EditForm closeModal={closeModal} {...props} />\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { useContacts } from 'hooks/useContacts';\nimport { Modal } from 'components/Modal/Modal';\nimport PropTypes from 'prop-types';\n\nexport const ContactItem = ({ id, name, number, serialNumber }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { deleteContact } = useContacts();\n\n  const openModal = e => {\n    setIsModalOpen(true);\n    const currentButton = e.target;\n    currentButton.blur();\n  };\n\n  const closeModal = () => setIsModalOpen(false);\n\n  return (\n    <>\n      <div className=\"mb-5 flex items-center\">\n        <span className=\"mr-2.5 inline-flex rounded-full bg-violet-500 px-2.5 py-0.5 text-white\">\n          {serialNumber}\n        </span>\n        <div>\n          <p className=\"text-gray-500\">\n            Name: <span className=\"text-black\">{name}</span>\n          </p>\n          <p className=\"text-gray-500\">\n            Phone: <span className=\"text-black\">{number}</span>\n          </p>\n        </div>\n      </div>\n      <div className=\"ml-auto w-fit\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            deleteContact(id);\n          }}\n          className=\"btn-secondary mr-5\"\n        >\n          Delete\n        </button>\n        <button type=\"button\" onClick={openModal} className=\"btn-secondary\">\n          Edit\n        </button>\n      </div>\n      {isModalOpen && (\n        <Modal closeModal={closeModal} id={id} name={name} number={number} />\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  serialNumber: PropTypes.number.isRequired,\n};\n","import { useContacts } from 'hooks/useContacts';\nimport { useGlobal } from 'hooks/useGlobal';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nexport const ContactList = () => {\n  const { filteredContacts } = useContacts();\n  const { error } = useGlobal();\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        filteredContacts.length > 0 && (\n          <ul className=\"grid grid-cols-2 gap-5\">\n            {filteredContacts.map(({ id, name, number }, idx) => (\n              <li key={id} className=\"block rounded p-5 shadow-custom-shadow\">\n                <ContactItem\n                  id={id}\n                  name={name}\n                  number={number}\n                  serialNumber={idx + 1}\n                />\n              </li>\n            ))}\n          </ul>\n        )\n      )}\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useContacts } from 'hooks/useContacts';\nimport { filterContacts } from 'redux/reduxContactsList/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useContacts();\n\n  const onChange = e => {\n    const { value } = e.target;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <label className=\"mb-5 inline-block\">\n      Find contacts by name:\n      <br />\n      <input\n        type=\"text\"\n        value={filter}\n        placeholder=\"Name\"\n        onChange={onChange}\n        className=\"rounded border border-black hover:border-violet-500 focus:outline-violet-500\"\n      />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst ContactListPage = () => {\n  const { fetchContacts } = useContacts();\n\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  return (\n    <>\n      <h1 className=\"mb-5 text-center text-xl font-semibold\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"mb-5 text-xl font-semibold\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactListPage;\n"],"names":["selectContacts","state","contacts","items","selectFilterValue","filter","selectVisibleContacts","createSelector","filterToLowerCase","toLowerCase","contact","name","includes","useContacts","useSelector","filteredContacts","dispatch","useDispatch","fetchContacts","useCallback","actions","addContact","number","deleteContact","contactId","editContact","editedContact","notifyInfoOptions","position","distance","fontSize","width","cssAnimationStyle","cssAnimationDuration","ContactForm","isContactInPhonebook","some","onSubmit","e","preventDefault","form","target","elements","value","phone","Notify","reset","className","type","placeholder","pattern","title","required","EditForm","closeModal","id","defaultValue","onClick","Modal","props","useEffect","onEscClick","code","document","addEventListener","removeEventListener","currentTarget","ContactItem","serialNumber","useState","isModalOpen","setIsModalOpen","blur","ContactList","error","useGlobal","length","map","idx","Filter","onChange","filterContacts"],"sourceRoot":""}