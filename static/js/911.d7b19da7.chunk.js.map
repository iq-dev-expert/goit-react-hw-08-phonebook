{"version":3,"file":"static/js/911.d7b19da7.chunk.js","mappings":"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","sources":["redux/reduxContactsList/selectors.js","hooks/useContacts.js","components/ContactForm/ContactForm.styled.jsx","utils-style/Template.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/App/App.styled.jsx","utils-style/Theme.jsx","pages/ContactListPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    const filterToLowerCase = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterToLowerCase)\n    );\n  }\n);\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from 'redux/reduxContactsList/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectFilterValue,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/reduxContactsList/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilterValue);\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  const dispatch = useDispatch();\n  const addContact = (name, phone) => {\n    dispatch(actions.addContact(name, phone));\n  };\n  const deleteContact = contactId => dispatch(actions.deleteContact(contactId));\n\n  const fetchContacts = useCallback(\n    () => dispatch(actions.fetchContacts()),\n    [dispatch]\n  );\n\n  return {\n    contacts,\n    isLoading,\n    error,\n    filter,\n    filteredContacts,\n    addContact,\n    deleteContact,\n    fetchContacts,\n  };\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: table-caption;\n  padding: 10px;\n  margin: 0 0 20px 0;\n\n  border: 1px solid;\n\n  label {\n    display: block;\n\n    margin: 0 0 20px 0;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-radius: 4px;\n  background-color: ${props => props.theme.colors.buttonBgColor};\n  border-color: ${props => props.theme.colors.buttonBorderColor};\n  transition: background-color\n      ${props => props.theme.animation.durationAndTimingFunction},\n    border-color ${props => props.theme.animation.durationAndTimingFunction};\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.accent};\n    border-color: ${props => props.theme.colors.accent};\n  }\n`;\n","import { Form } from './ContactForm.styled';\nimport { Button } from 'utils-style/Template.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const ContactForm = () => {\n  const { contacts, addContact } = useContacts();\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.elements.name.value;\n    const phone = form.elements.phone.value;\n\n    if (isContactInPhonebook(name)) {\n      alert(`${name} is already in contacts.`);\n      form.reset();\n      return;\n    }\n\n    addContact({ name, phone });\n    form.reset();\n  };\n\n  const isContactInPhonebook = name => {\n    return contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n\n  li {\n    display: flex;\n    align-items: center;\n    margin: 0 0 10px 0;\n\n    p {\n      margin: 0 30px 0 0;\n    }\n  }\n`;\n","import { List } from './ContactList.styled';\nimport { Button } from 'utils-style/Template.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const ContactList = () => {\n  const { filteredContacts, deleteContact, error } = useContacts();\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        filteredContacts.length > 0 && (\n          <List>\n            {filteredContacts.map(({ id, name, phone }) => {\n              return (\n                <li key={id}>\n                  <p>\n                    {name}: {phone}{' '}\n                  </p>\n                  <Button\n                    type=\"button\"\n                    onClick={() => {\n                      deleteContact(id);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </li>\n              );\n            })}\n          </List>\n        )\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: table-caption;\n\n  margin: 0 0 20px 0;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/reduxContactsList/filterSlice';\nimport { Label } from './Filter.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useContacts();\n\n  const onChange = e => {\n    const { value } = e.target;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <input type=\"text\" value={filter} onChange={onChange} />\n    </Label>\n  );\n};\n","import { useEffect } from 'react';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const Loader = () => {\n  const { isLoading } = useContacts();\n\n  useEffect(() => {\n    isLoading ? Loading.dots() : Loading.remove();\n  });\n\n  return null;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px 0 0 60px;\n\n  h1,\n  h2 {\n    margin: 0 0 10px 0;\n  }\n`;\n","export const theme = {\n  colors: {\n    accent: '#7edffc',\n    buttonBgColor: '#e6eaeb',\n    buttonBorderColor: '#c5c9c9',\n  },\n\n  animation: {\n    durationAndTimingFunction: '250ms linear',\n  },\n};\n","import { useEffect } from 'react';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ThemeProvider } from '@emotion/react';\nimport { Container } from 'components/App/App.styled';\nimport { theme } from 'utils-style/Theme';\n\nconst ContactListPage = () => {\n  const { fetchContacts } = useContacts();\n\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Loader />\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default ContactListPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectVisibleContacts","createSelector","filterToLowerCase","toLowerCase","contact","name","includes","useContacts","useSelector","filteredContacts","dispatch","useDispatch","addContact","phone","actions","deleteContact","contactId","fetchContacts","useCallback","Form","styled","Button","props","theme","colors","buttonBgColor","buttonBorderColor","animation","durationAndTimingFunction","accent","ContactForm","isContactInPhonebook","some","onSubmit","e","preventDefault","form","target","elements","value","alert","reset","type","pattern","title","required","List","ContactList","length","map","id","onClick","Label","Filter","onChange","filterContacts","Loader","useEffect","Loading","Container"],"sourceRoot":""}